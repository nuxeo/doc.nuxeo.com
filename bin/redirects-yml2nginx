#!/usr/bin/env node
'use strict';
/* eslint no-console: 0 */

const yaml = require('js-yaml');
const fs = require('fs');
const path = require('path');

const shortlinks = require('../shortlinks');
const redirects_file = path.join(__dirname, '..', 'redirects.yml');

// Shortlinks
console.log(
  Object.entries(shortlinks)
    .map(([url, shortlink_arr]) => shortlink_arr
        .map(shortlink => `rewrite ^/n/${shortlink}/?\t${url}\tpermanent;`)
        .join('\n'))
    .join('\n')
);

// Redirects
const add_prefix_regex = /^(\/|https?:\/\/)/;
const escape_spaces = text => text.replace(/ /g, '\\ ');
let redirects;

try {
  redirects = yaml.safeLoad(fs.readFileSync(redirects_file, 'utf8')) || {};
} catch (e) {
  redirects = {};
  throw new Error(`Failed to load: ${redirects_file}\n${e}`);
}

// Output to stdout
console.log(
  Object.entries(redirects)
    .map(([source, target_config = '/']) => {
      if (
        typeof target_config === 'string' ||
        target_config instanceof String
      ) {
        target_config = { target: target_config };
      }
      let { target, type = 'permanent' } = target_config;

      // add leading /
      if (!add_prefix_regex.test(target)) {
        target = `/${target}`;
      }

      // Escape spaces in source and target
      source = escape_spaces(source);
      target = escape_spaces(target);

      // Build output string
      return `rewrite ${source}\t${target}\t${type};`;
    })
    .join('\n')
);
